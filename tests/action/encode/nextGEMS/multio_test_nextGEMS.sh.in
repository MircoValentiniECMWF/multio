#!/bin/sh

MULTIO_FEED=@CMAKE_BINARY_DIR@/bin/multio-feed 
GRIB_COPY=@CMAKE_BINARY_DIR@/bin/grib_copy 
GRIB_COMPARE=@CMAKE_BINARY_DIR@/bin/grib_compare 
TEST_PATH=@TEST_NEXTGEMS_PATH@
INPUT_PATH=@TEST_NEXTGEMS_INPUT_PATH@/nextgems_test_data
OUTPUT_PATH=@TEST_NEXTGEMS_OUTPUT_PATH@
OUTPUT_ALL_PATH=@TEST_NEXTGEMS_PATH@/output_all

SINGLE_INPUT_PATH=$TEST_PATH/single_input
SINGLE_OUTPUT_PATH=$TEST_PATH/single_output

# Clear outputpath
[ -d "$OUTPUT_ALL_PATH" ] && rm -rf $OUTPUT_ALL_PATH
[ ! -d "$OUTPUT_ALL_PATH" ] && mkdir -p $OUTPUT_ALL_PATH


# Run tool
for F in $INPUT_PATH/*.grib
do
    :
    echo "\n\nmultio-feed ${F##*/}:"
    [ -d "$OUTPUT_PATH" ] && rm -rf $OUTPUT_PATH
    [ ! -d "$OUTPUT_PATH" ] && mkdir -p $OUTPUT_PATH
    $MULTIO_FEED $F --decode --plans=$TEST_PATH/testNextGEMS.yaml
    
    echo "Copy output from $OUTPUT_PATH to $OUTPUT_ALL_PATH"
    for FOUT in $OUTPUT_PATH/*
    do
            :
        echo "\n\n${FOUT##*/}:"
        mv $FOUT $OUTPUT_ALL_PATH/${F##*/}_${FOUT##*/}
    done
done

# Post process
mkdir -p $SINGLE_INPUT_PATH
mkdir -p $SINGLE_OUTPUT_PATH

## Clear previous results
rm -rf $SINGLE_INPUT_PATH/*
rm -rf $SINGLE_OUTPUT_PATH/*


for F in $INPUT_PATH/*.grib
do
    :
    echo "\n\nGRIB copy input ${F##*/}:"
    # $GRIB_COPY $F $SINGLE_INPUT_PATH/${F##*/}${F##*.} ~/tmp/ifsout-test/ifs-[levtype]-[gridType]-[level]-[stepRange]-[shortName]-[edition].grib
    $GRIB_COPY $F $SINGLE_INPUT_PATH/[levtype]-[gridType]-[level]-[stepRange]-[shortName]-[edition].grib
done

for F in $OUTPUT_ALL_PATH/*.grib
do
    :
    echo "\n\nGRIB copy output ${F##*/}:"
    $GRIB_COPY $F $SINGLE_OUTPUT_PATH/[levtype]-[gridType]-[level]-[stepRange]-[shortName]-[edition].grib
done


TEST_RESULTS=$TEST_PATH/results.txt
rm $TEST_RESULTS 2> /dev/null
touch $TEST_RESULTS


# Compare all single results
for F in $SINGLE_INPUT_PATH/*.grib
do
    :
    echo "\n---------------------------"
    COMPARE_CMD="${GRIB_COMPARE} -P -T 2 -r ${SINGLE_INPUT_PATH}/${F##*/} ${SINGLE_OUTPUT_PATH}/${F##*/}"
    echo "\nCompare ${F##*/}:\n\t$COMPARE_CMD"
    FBASE=$(basename -- $F)
    LOG_OUT="${SINGLE_OUTPUT_PATH}/${FBASE%.*}_compare.txt"
    $COMPARE_CMD > $LOG_OUT
    
    if [[ $? == 0 ]] ; then
        echo "SUCCESS:  ${F##*/}"
    else
        # With GRIB1 it's hard to adjust some values. We can not overwrite indicatorOfTypeOfLevel and bottomLevel/topLevel. Hence we ignore this
        cat $LOG_OUT | grep -v -e '\(indicatorOfTypeOfLevel\|bottomLevel\|^$\|^-- GRIB\)' && (
            # For param 'v' the laplacianOperator and referenceValue might be different. Seems to depend on ECCODES version... ignore that
            cat $LOG_OUT | grep -e 'paramId=132' && (
                echo "\n### Special filters for paramId=132 (v)###"
                cat $LOG_OUT | grep -v -e '\(referenceValue\|tolerance\=\|absolute\ diff\.\|\|\[P\]\|^$\|^-- GRIB\)' && (
                    echo "FAILED (paramId=132 (v), after filtering):  ${F##*/}"
                    
                    echo "\n---------------------------\nCompare ${F##*/}:\n\t$COMPARE_CMD" >> $TEST_RESULTS
                    cat $LOG_OUT >> $TEST_RESULTS
                ) || (
                    echo "SUCCESS (paramId=132 (v), after filtering):  ${F##*/}"
                )
            ) || 
            (cat $LOG_OUT | grep -e 'paramId=133' && (
                    echo "\n### Special filters for paramId=133 (q)###"
                    cat $LOG_OUT | grep -v -e '\(long\ \[N\|\"pl\"\|Length\]\|GridPoint\]\|\[P\]\|^$\|^-- GRIB\)' && (
                        echo "FAILED (paramId=133 (q), after filtering):  ${F##*/}"
                        
                        echo "\n---------------------------\nCompare ${F##*/}:\n\t$COMPARE_CMD" >> $TEST_RESULTS
                        cat $LOG_OUT >> $TEST_RESULTS
                    ) || (
                        echo "SUCCESS (paramId=133 (q), after filtering):  ${F##*/}"
                    )
                ) || 
                (cat $LOG_OUT | grep -e 'shortName=sithick paramId=174098' && (
                    echo "\n### Special filters for paramId=133 ###"
                    cat $LOG_OUT | grep -v -e '\(Length\]\|Factor\]\|not\ found\ in\ 2nd\ field\|^$\|^-- GRIB\)' && (
                        echo "FAILED (paramId=174098 (sithick), after filtering):  ${F##*/}"

                        echo "\n---------------------------\nCompare ${F##*/}:\n\t$COMPARE_CMD" >> $TEST_RESULTS
                        cat $LOG_OUT >> $TEST_RESULTS
                    ) || (
                        echo "SUCCESS (paramId=174098 (sithick), after filtering):  ${F##*/}"
                    )
                ) || (
                    echo "FAILED:  ${F##*/}"

                    echo "\n---------------------------\nCompare ${F##*/}:\n\t$COMPARE_CMD" >> $TEST_RESULTS
                    cat $LOG_OUT >> $TEST_RESULTS
                )
            )
            )
        ) || (
            echo "SUCCESS (after filtering):  ${F##*/}"
        )
    fi
done


if [ -s $TEST_RESULTS ]; then
    printf '\n\n\n\n'; printf '#%.0s' {1..80}; printf '\n'
    
    echo "Some comparisons failed (view $TEST_RESULTS):"
    cat $TEST_RESULTS
    exit 1
else
    exit 0
fi
